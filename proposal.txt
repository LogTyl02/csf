Proposal for Poetry Generating Python Script(s):

This script will operate in two modes: vanilla, and Twitter. The vanilla mode will accept a text file, strip lines
and words from those lines, count syllables for each word, and attempt to create a pseudo-haiku from them.
There will be 3 haiku styles: 3/5/3 syllable count, 5/7/5 syllable count, and a free format which will have lines
of varying length, but will maintain a total syllable count of 17 or less. This format is based on the 'American Haiku'
format by Jack Kerouac.

For Twitter mode, the program will either grab incoming public tweets from the Twitter firehose and process them,
search the rest API (already created Tweets, not incoming), and process them, or filter potential tweets based on
keywords, or hashtags.

	Turns out there are a lot of posts on Twitter that wouldn't be great for poetry. Who would have thought?

Writing this program will require me to become somewhat familiar with the Twitter API, the functions they use, as well
as storing and parsing JSON data, and using file i/o to help manage and save the data I'm working with. I'll also have to
either find someone else's code for syllable counting and modify it, or attempt to write my own.


(Freewriting Notes, Ideas)

# Twitter Haiku Generator

# Pull incoming public tweets from the Twitter stream / firehose
#   Either randomly, or with a set of data that determines appropriateness (hashtags, keywords, or what
#   have you, pull words and generate pseudohaiku with them.

# Pseudohaiku = Fits the mechanical form of haiku, correct syllable count per line, correct number of lines.
#   Does not necessarily fit the other requirements for haiku. (Nature word, cutting word, meaning)

# Ambitious goal, perhaps outside of the scope of this project currently: Fulfill the other requirements to
#   make more legitamite haiku. This might involve some machine learning stuff. This is for later.

# Also possible, but maybe for later: Feed the generated haiku into a website using web2py or Django. Allow
#   users to up or downvote haiku. Keep track of most popular haiku. This data can later be used for data
#   mining, trend tracking, or machine learning.

# Very ambitious, totally for later: Use vote data to teach the program to generate better haiku.



# Syllable count could be given to the program through a database. This might require restricting the scope
#   of words the program will find and use.
# Could write an algorithm to determine syllable length of a word, and provide a percentage of confidence
#   the length is correct. Ambiguous syllable counts will be discarded, or left later for manual
#   diambigutation or machine learning stuff.

# ( WEBSITE STUFF. TOTALLY FOR LATER. PROBABLY OUTSIDE THE SCOPE OF THE PROJECT FOR TIME LIMITATIONS )
# Data mining / trend stuff: Track popularity of haiku, certain words, word combinations, nature words, etc.
#   Maybe have a 'share' to Twitter button. Track shared haiku. If possible track the haiku itself ON twitter
#   and watch retweet trends.

# Track users for excessive voting behavior. Implement restrictions, banlists, etc.
# PHP backend, might have Royce do that for me. Can use my own website. Hosted on Royce's lineode.

# If the website goes up, a small terms of use might be in order. Have to check Twitter's terms to see
#   what, if any, intellectual property stuff is involved with me using words from random users. 
#   It's probably safe as long as I don't use phrases.

# The poems will be open for inspiration / maybe modification, but there will a request / plea to artistic
#   integrity to not claim the poems as your own. (This may be wishful thinking that the program could
#   generate anything someone might want to steal.

# OPEN SOURCE! COMMUNITY DRIVEN! MINDFULNESS FOR THE DIGITAL ERA! FREE DATA AND POETRY FOR EVERYBODY!